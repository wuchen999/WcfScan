name: Build WcfScan Project

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: latest

    # 关键修改：直接调用 Visual Studio Installer 添加 .NET Framework 4.0 Targeting Pack
    - name: Add .NET Framework 4.0 Targeting Pack to VS Installation
      shell: powershell
      run: |
        # 直接使用硬编码的 Program Files (x86) 路径，这是最可靠的方式
        # 避免了环境变量解析问题
        $programFilesX86Path = "C:\Program Files (x86)"

        # 拼接 vswhere.exe 的完整路径
        $vswherePath = Join-Path -Path $programFilesX86Path -ChildPath "Microsoft Visual Studio\Installer\vswhere.exe"
        
        # 查找 Visual Studio Installer 的可执行文件 (setup.exe)
        # vswhere -property installerPath 实际返回的是 installer\setup.exe 的完整路径
        $setupExePath = & "$vswherePath" -latest -products Microsoft.VisualStudio.Product.Enterprise -property installerPath
        
        # 查找 Visual Studio 2022 Enterprise 的安装路径
        $vsInstallationPath = & "$vswherePath" -latest -products Microsoft.VisualStudio.Product.Enterprise -property installationPath
        
        $componentId = "Microsoft.Component.NetFX.TargetPack.4.0"

        if (-not (Test-Path $vswherePath)) {
            Write-Error "vswhere.exe not found at: $vswherePath. This indicates a very unusual runner setup."
            exit 1
        }
        if (-not $setupExePath) {
            Write-Error "Could not find Visual Studio Installer (setup.exe) path using vswhere.exe. Is VS 2022 Enterprise installed?"
            exit 1
        }
        if (-not $vsInstallationPath) {
            Write-Error "Could not find Visual Studio 2022 Enterprise installation path using vswhere.exe. Is VS 2022 Enterprise installed?"
            exit 1
        }
        if (-not (Test-Path $setupExePath)) {
            Write-Error "Visual Studio Installer (setup.exe) not found at: $setupExePath"
            exit 1
        }

        Write-Host "Found vswhere.exe at: $vswherePath"
        Write-Host "Found Visual Studio Installer (setup.exe) at: $setupExePath"
        Write-Host "Found Visual Studio 2022 Enterprise at: $vsInstallationPath"
        Write-Host "Adding component '$componentId' to Visual Studio installation..."

        # 调用 Visual Studio Installer，以静默方式添加组件
        Start-Process -FilePath $setupExePath -ArgumentList "modify --installPath ""$vsInstallationPath"" --add $($componentId) --quiet --norestart" -Wait -PassThru | Out-Null
        
        if ($LASTEXITCODE -ne 0 -and $LASTEXITCODE -ne 3010) {
            Write-Error "Failed to add .NET Framework 4.0 Targeting Pack. Exit Code: $LASTEXITCODE"
            exit 1
        }
        Write-Host ".NET Framework 4.0 Targeting Pack added successfully into Visual Studio installation."

    - name: Restore NuGet Packages
      # 确保路径分隔符在Windows上是反斜杠
      run: msbuild WcfScan.sln /t:Restore

    - name: Build Solution
      run: msbuild WcfScan.sln /p:Configuration=Release /p:Platform="Any CPU" 

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WcfScan-Build
        path: WcfScan/bin/Release/
